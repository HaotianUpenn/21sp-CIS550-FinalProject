{"ast":null,"code":"var _jsxFileName = \"/Users/z20171126/21sp-CIS550-HaotianUpenn/hw2/client/src/components/Posters.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport PostersBlock from './PostersBlock';\nexport default class Posters extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      movies: []\n    };\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let poster;\n    fetch(\"http://localhost:8081/posters\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(function (genreList) {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      poster = genreList;\n      let genreDivs = genreList.map(function (MoviePosters, i) {\n        let m_id = MoviePosters.imdb_id;\n        fetch(\"http://www.omdbapi.com/?i=\" + m_id + \"&apikey=28dd6ee\", {\n          method: 'GET' // The type of HTTP request.\n\n        }).then(res => {\n          // Convert the response data to a JSON.\n          return res.json();\n        }, err => {\n          // Print the error if there is one.\n          console.log(err);\n        }).then(genreList => {\n          if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n          // A button which triggers the showMovies function for each genre.\n\n          console.log(genreList);\n        }, err => {\n          // Print the error if there is one.\n          console.log(err);\n        });\n        return /*#__PURE__*/React.createElement(PostersBlock, {\n          moviename: MoviePosters.title,\n          ratings: MoviePosters.rating,\n          url: MoviePosters.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }\n        });\n      }); // Set the state of the genres list to the value returned by the HTTP response from the server.\n      // this.setState({\n      //   movies: genreDivs\n      // });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Posters\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, this.state.movies))));\n  }\n\n}","map":{"version":3,"sources":["/Users/z20171126/21sp-CIS550-HaotianUpenn/hw2/client/src/components/Posters.js"],"names":["React","PageNavbar","PostersBlock","Posters","Component","constructor","props","state","movies","componentDidMount","poster","fetch","method","then","res","json","err","console","log","genreList","genreDivs","map","MoviePosters","i","m_id","imdb_id","title","rating","url","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport PostersBlock from './PostersBlock';\n\n\nexport default class Posters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      movies: []\n    }\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let poster;\n    fetch(\"http://localhost:8081/posters\",\n      {\n        method: 'GET' // The type of HTTP request.\n      }).then(res => {\n        // Convert the response data to a JSON.\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(function (genreList) {\n        if (!genreList) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        poster = genreList;\n        let genreDivs = genreList.map(function (MoviePosters, i) {\n          let m_id = MoviePosters.imdb_id ;\n          fetch(\"http://www.omdbapi.com/?i=\" + m_id + \"&apikey=28dd6ee\",\n            {\n              method: 'GET' // The type of HTTP request.\n            }).then(res => {\n              // Convert the response data to a JSON.\n              return res.json();\n            }, err => {\n              // Print the error if there is one.\n              console.log(err);\n            })\n            .then(genreList => {\n              if (!genreList) return;\n              // Map each genreObj in genreList to an HTML element:\n              // A button which triggers the showMovies function for each genre.\n              console.log(genreList);\n            }, err => {\n              // Print the error if there is one.\n              console.log(err);\n            });\n\n          return <PostersBlock moviename={MoviePosters.title} ratings={MoviePosters.rating}\n            url={MoviePosters.url} />\n        }\n\n        );\n\n\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        // this.setState({\n        //   movies: genreDivs\n        // });\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Posters</div>\n            <div className=\"genres-container\">\n              {this.state.movies}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}