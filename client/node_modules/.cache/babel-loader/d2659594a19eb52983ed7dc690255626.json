{"ast":null,"code":"var _jsxFileName = \"/Users/z20171126/21sp-CIS550-HaotianUpenn/hw2/client/src/components/Posters.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport PostersBlock from './PostersBlock';\nexport default class Posters extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      movies: []\n    };\n    this.getapi = this.getapi.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let poster;\n    fetch(\"http://localhost:8081/posters\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(res => {\n      res.map(temp => this.getapi(temp));\n    }, err => {\n      console.log(err);\n    }); // }\n    // ).then(function ([apires,sqlres]) {\n    //   //if (!genreList) return;\n    //   // Map each genreObj in genreList to an HTML element:\n    //   // A button which triggers the showMovies function for each genre.\n    //   // let genreDivs = genreList.map(function (MoviePosters, i) {\n    //   //   let m_id = MoviePosters.imdb_id;\n    //   //   let jumpurl = \"https://www.imdb.com/title/\" + m_id;\n    //   //   let tempatg  = fetch()\n    //   // });\n    //   console.log(apires);\n    //   console.log(sqlres);\n    //   // this.setState({\n    //   //   movies: genreDivs\n    //   // });\n    // }, err => {\n    //   // Print the error if there is one.\n    //   console.log(err);\n    // });\n  }\n\n  getapi(sqlres) {\n    return fetch(\"http://www.omdbapi.com/?i=\" + sqlres.imdb_id + \"&apikey=28dd6ee\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(apires => {\n      let jumpurl = \"https://www.imdb.com/title/\" + sqlres.imdb_id;\n      let temp = /*#__PURE__*/React.createElement(PostersBlock, {\n        moviename: sqlres.title,\n        url: jumpurl,\n        ratings: sqlres.rating,\n        poster: apires.Poster,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }\n      });\n      this.setState({\n        movies: [...this.statemovies, temp]\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Posters\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, this.state.movies))));\n  }\n\n}","map":{"version":3,"sources":["/Users/z20171126/21sp-CIS550-HaotianUpenn/hw2/client/src/components/Posters.js"],"names":["React","PageNavbar","PostersBlock","Posters","Component","constructor","props","state","movies","getapi","bind","componentDidMount","poster","fetch","method","then","res","json","err","console","log","map","temp","sqlres","imdb_id","apires","jumpurl","title","rating","Poster","setState","statemovies","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport PostersBlock from './PostersBlock';\n\n\nexport default class Posters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      movies: []\n    }\n    this.getapi = this.getapi.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let poster;\n    fetch(\"http://localhost:8081/posters\",\n      {\n        method: 'GET' // The type of HTTP request.\n      }).then(res => {\n        // Convert the response data to a JSON.\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(res =>{\n        res.map(temp=>this.getapi(temp))\n      },err =>{\n        console.log(err);\n      });\n      // }\n      // ).then(function ([apires,sqlres]) {\n      //   //if (!genreList) return;\n      //   // Map each genreObj in genreList to an HTML element:\n      //   // A button which triggers the showMovies function for each genre.\n  \n      //   // let genreDivs = genreList.map(function (MoviePosters, i) {\n      //   //   let m_id = MoviePosters.imdb_id;\n      //   //   let jumpurl = \"https://www.imdb.com/title/\" + m_id;\n      //   //   let tempatg  = fetch()\n          \n      //   // });\n      //   console.log(apires);\n      //   console.log(sqlres);\n      //   // this.setState({\n      //   //   movies: genreDivs\n      //   // });\n\n      // }, err => {\n      //   // Print the error if there is one.\n      //   console.log(err);\n      // });\n\n  }\n\n\n  getapi(sqlres) {\n    return fetch(\"http://www.omdbapi.com/?i=\" + sqlres.imdb_id + \"&apikey=28dd6ee\",\n      {\n        method: 'GET' // The type of HTTP request.\n      }).then(res => {\n        // Convert the response data to a JSON.\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(apires=>{\n        let jumpurl = \"https://www.imdb.com/title/\" + sqlres.imdb_id;\n        let temp = <PostersBlock moviename = {sqlres.title} url = {jumpurl} ratings = {sqlres.rating} poster ={apires.Poster}/>\n       this.setState({\n          movies: [...this.statemovies,temp]\n        });\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Posters</div>\n            <div className=\"genres-container\">\n              {this.state.movies}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}